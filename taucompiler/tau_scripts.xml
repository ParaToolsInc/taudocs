<sect1 id="tau_scripts">

	<title>TAU scripted compilation</title>

	<simplesect>
		<para>If you wish to avoid the use of Makefiles altogether, TAU provides
		three script that will instrument your code from the command line. </para>
	</simplesect>

	<sect2>
		<title>Usage</title>

		<para>TAU provides these scripts: tau_cc.sh, tau_cxx.sh, tau_upc.sh, tau_f77.sh and tau_f90.sh to
		compile programs. These can the found in
		the tools/src/ directory so you may wish to add it to your path. You might
		use tau_cc.sh to compile a C program by typing: <screen>
%>tau_cc.sh -tau_makefile=[path to makefile] sampleCprogram.c
</screen>

		The Makefile can usually be found in the /[arch]/lib directory, for example
		<literal>/apple/lib/Makefile.tau-pdt</literal>.</para>

		<para>Tau_cc.sh also has the ability to use a Makefile specified in an
		environment variable. to run tau_cc.sh so it uses the Makefile specified by
		environment variable <literal>TAU_MAKEFILE</literal>, type:<screen>
%>export TAU_MAKEFILE=[path to tau]/[arch]/lib/[makefile].
%>tau_cc.sh sampleCprogram.c
</screen>

		Similarly, if you want to set tau option like selective instrumentation
		use the <literal>TAU_OPTIONS</literal> environment variable.</para>

	</sect2>

	<sect2>
		<title>Reference</title>

		<para>A complete list of option for these scripts:</para>
<screen>

<screen>-optVerbose</screen>
Turn on verbose debugging message
<screen>-optMemDbg</screen>
Enable TAU's runtime memory debugger
<screen>-optDetectMemoryLeaks</screen>
Synonym for -optMemDbg
<screen>-optPdtDir=""</screen>
PDT architecture directory. Typically $(PDTDIR)/$(PDTARCHDIR)
<screen>-optPdtF95Opts=""</screen>
Options for Fortran parser in PDT (f95parse)
<screen>-optPdtF95Reset=""</screen>
Reset options to the Fortran parser to the given list
<screen>-optPdtCOpts=""</screen>
Options for C parser in PDT (cparse). Typically $(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS)
<screen>-optPdtCReset=""</screen>
Reset options to the C parser to the given list
<screen>-optPdtCxxOpts=""</screen>
Options for C++ parser in PDT (cxxparse). Typically $(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS)
<screen>-optPdtCxxReset=""</screen>
tReset options to the C++ parser to the given list
<screen>-optPdtF90Parser=""</screen>
Specify a different Fortran parser. For e.g., f90parse or gfparse48 instead of f95parse
<screen>-optPdtCParser=""</screen>
Specify a different C parser. For e.g., cparse4101 instead of cparse
<screen>-optPdtCxxParser=""</screen>
Specify a different C++ parser. For e.g., cxxparse4101 instead of cxxparse
<screen>-optPdtGnuFortranParser</screen>
Specify the GNU gfortran PDT parser gfparse instead of f95parse
<screen>-optPdtCleanscapeParser</screen>
Specify the Cleanscape Fortran parser
<screen>-optPdtUser=""</screen>
Optional arguments for parsing source code
<screen>-optTauInstr=""</screen>
Specify location of tau_instrumentor. Typically $(TAUROOT)/$(CONFIG_ARCH)/bin/tau_instrumentor
<screen>-optPreProcess</screen>
Preprocess the source code before parsing. Uses /usr/bin/cpp -P by default.
<screen>-optContinueBeforeOMP</screen>
Insert a CONTINUE statement before !\$OMP directives.
<screen>-optCPP=""</screen>
Specify an alternative preprocessor and pre-process the sources.
<screen>-optFPP=""</screen>
Specify an alternative preprocessor and pre-process the fortran sources.
<screen>-optCPPOpts=""</screen>
Specify additional options to the C pre-processor.
<screen>-optFPPOpts=""</screen>
Specify additional options to the F pre-processor.
<screen>-optCPPReset=""</screen>
Reset C preprocessor options to the specified list.
<screen>-optTauSelectFile=""</screen>
Specify selective instrumentation file for tau_instrumentor
<screen>-optTauWrapFile=""</screen>
Specify path to the link_options.tau file generated by tau_wrap
<screen>-optTrackIO</screen>
Specify wrapping of POSIX I/O calls at link time.
<screen>-optTrackUPCR</screen>
Specify wrapping of UPC runtime calls at link time.
<screen>-optTrackDMAPP</screen>
Specify wrapping of Cray DMAPP library calls at link time.
<screen>-optTrackPthread</screen>
Specify wrapping of Pthread library calls at link time.
<screen>-optTrackGOMP></screen>
Specify wrapping of GOMP library calls at link time. (default)
<screen>-optNoTrackGOMP</screen>
Disable wrapping of GOMP library calls at link time.
<screen>-optTrackMPCThread</screen>
Specify wrapping of MPC Thread library calls at link time.
<screen>-optWrappersDir=""</screen>
Specify the location of the link wrappers directory.
<screen>-optPDBFile=""</screen>
Specify PDB file for tau_instrumentor. Skips parsing stage.
<screen>-optTau=""</screen>
Specify options for tau_instrumentor
<screen>-optCompile=""</screen>
Options passed to the compiler. Typically $(TAU_MPI_INCLUDE) $(TAU_INCLUDE) $(TAU_DEFS)


<screen>-optTauDefs=""</screen>
Options passed to the compiler by TAU. Typically $(TAU_DEFS)
<screen>optTauIncludes=</screen>
Options passed to the compiler by TAU. Typically $(TAU_MPI_INCLUDE) $(TAU_INCLUDE)
<screen>-optIncludeMemory=""</screen>
Flags for replacement of malloc/free. Typically -I$(TAU_DIR)/include/TauMemory
<screen>-optReset=""</screen>
Reset options to the compiler to the given list
<screen>-optLinking=""</screen>
Options passed to the linker. Typically $(TAU_MPI_FLIBS) $(TAU_LIBS) $(TAU_CXXLIBS)
<screen>-optLinkReset=""</screen>
Reset options to the linker to the given list
<screen>-optLinkPreserveLib=""</screen>
Libraries which TAU should preserve the order of on the link line see "Moving these libraries to the end of the link line:". Default: none.
<screen>-optTauCC="cc compiler>"</screen>
Specifies the C compiler used by TAU
<screen>-optTauUseCXXForC</screen>
Specifies the use of a C++ compiler for compiling C code
<screen>-optUseReturnFix</screen>
Specifies the use of a bug fix with ROSE parser using EDG v3.x
<screen>-optOpariTool="path to Opari"</screen>
Specifies the location of the Opari tool
<screen>-optLinkOnly</screen>
Disable instrumentation during compilation, do link in the TAU libs
<screen>-optOpariDir="path"</screen>
Specifies the location of the Opari directory
<screen>-optOpariOpts=""</screen>
Specifies optional arguments to the Opari tool
<screen>-optOpariNoInit=""</screen>
Do not initlize the POMP2 regions.
<screen>-optOpariLibs=""</screen>
Specifies the libraries that have POMP2 regions. (Overrides optOpariNoInit
<screen>-optOpariReset=""</screen>
Resets options passed to the Opari tool
<screen>-optOpari2Tool="path to Opari2"</screen>
pecifies the location of the Opari tool
<screen>-optOpari2ConfigTool="path to Opari 2 configure"</screen>
Specifies the location of the Opari tool
<screen>-optOpari2Opts=""</screen>
Specifies optional arguments to the Opari tool
<screen>-optOpari2Reset=""</screen>
Resets options passed to the Opari tool
<screen>-optOpari2Dir="path"</screen>
Specifies the location of the Opari directory
<screen>-optNoMp</screen>
Removes -l*mpi* libraries during linking
<screen>-optMpi</screen>
Does not remove -l*mpi* libraries during linking (default)
<screen>-optNoRevert</screen>
Exit on error. Does not revert to the original compilation rule on error.
<screen>-optRevert</screen>
Revert to the original compilation rule on error (default).
<screen>-optNoCompInst</screen>
Do not revert to compiler instrumentation if source instrumentation fails.
<screen>-optKeepFiles</screen>
Does not remove intermediate .pdb and .inst.* files
<screen>-optReuseFiles</screen>
Reuses a pre-instrumented file and preserves it
<screen>-optAppCC="cc compiler"</screen>
Specifies the fallback C compiler
<screen>-optAppCXX="CXX compiler"</screen>
Specifies the fallback C++ compiler.
<screen>-optAppF90="f90 compiler"</screen>
Specifies the fallback F90 compiler.
<screen>-optShared</screen>
Use shared library version of TAU.
<screen>-optCompInst</screen>
Use compiler-based instrumentation.
<screen>-optPDTInst</screen>
Use PDT-based instrumentation.
<screen>-optHeaderInst</screen>
Enable instrumentation of headers
<screen>-optDisableHeaderInst</screen>
Disable instrumentation of headers
<screen>-optFixHashIf</screen>
Try to fix a "#IF" definition
<screen>-optMICOffload</screen>
Links code for Intel MIC offloading, requires both host and MIC TAU libraries

</screen>

	</sect2>

</sect1>

